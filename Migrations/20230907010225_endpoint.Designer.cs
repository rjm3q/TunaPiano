// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TunaPiano;

#nullable disable

namespace TunaPiano.Migrations
{
    [DbContext(typeof(TunaPianoDbContext))]
    [Migration("20230907010225_endpoint")]
    partial class endpoint
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("generesong", b =>
                {
                    b.Property<int>("genereId")
                        .HasColumnType("integer");

                    b.Property<int>("songsId")
                        .HasColumnType("integer");

                    b.HasKey("genereId", "songsId");

                    b.HasIndex("songsId");

                    b.ToTable("generesong");
                });

            modelBuilder.Entity("TunaPiano.Models.artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("age")
                        .HasColumnType("integer");

                    b.Property<string>("bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("artist");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            age = 24,
                            bio = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum",
                            name = "Carol Quackenbush"
                        });
                });

            modelBuilder.Entity("TunaPiano.Models.genere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("genere");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            description = "Rockabilly"
                        });
                });

            modelBuilder.Entity("TunaPiano.Models.song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("album")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("artistId")
                        .HasColumnType("integer");

                    b.Property<int>("artist_Id")
                        .HasColumnType("integer");

                    b.Property<int>("length")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("artistId");

                    b.ToTable("songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            album = "The South shall rock again!",
                            artist_Id = 1,
                            length = 201,
                            title = "Jesus hold my beer"
                        });
                });

            modelBuilder.Entity("TunaPiano.Models.song_genere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("genere_Id")
                        .HasColumnType("integer");

                    b.Property<int>("song_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("song_genere");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            genere_Id = 1,
                            song_Id = 1
                        });
                });

            modelBuilder.Entity("generesong", b =>
                {
                    b.HasOne("TunaPiano.Models.genere", null)
                        .WithMany()
                        .HasForeignKey("genereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TunaPiano.Models.song", null)
                        .WithMany()
                        .HasForeignKey("songsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TunaPiano.Models.song", b =>
                {
                    b.HasOne("TunaPiano.Models.artist", null)
                        .WithMany("songs")
                        .HasForeignKey("artistId");
                });

            modelBuilder.Entity("TunaPiano.Models.artist", b =>
                {
                    b.Navigation("songs");
                });
#pragma warning restore 612, 618
        }
    }
}
