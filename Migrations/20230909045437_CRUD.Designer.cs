// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TunaPiano;

#nullable disable

namespace TunaPiano.Migrations
{
    [DbContext(typeof(TunaPianoDbContext))]
    [Migration("20230909045437_CRUD")]
    partial class CRUD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GenreSong", b =>
                {
                    b.Property<int>("GenresGenreId")
                        .HasColumnType("integer");

                    b.Property<int>("SongsSongId")
                        .HasColumnType("integer");

                    b.HasKey("GenresGenreId", "SongsSongId");

                    b.HasIndex("SongsSongId");

                    b.ToTable("SongGenre", (string)null);
                });

            modelBuilder.Entity("TunaPiano.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ArtistId"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("ArtistName")
                        .HasColumnType("text");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            Age = 51,
                            ArtistName = "Hideki Naganuma",
                            Bio = "Japanese Funk Doctor"
                        },
                        new
                        {
                            ArtistId = 2,
                            Age = 30,
                            ArtistName = "Daft Punk",
                            Bio = "French Robots"
                        },
                        new
                        {
                            ArtistId = 3,
                            Age = 30,
                            ArtistName = "Static-X",
                            Bio = "Wayne took a Wisconsin Death Trip"
                        });
                });

            modelBuilder.Entity("TunaPiano.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GenreId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("Song_GenreId")
                        .HasColumnType("integer");

                    b.HasKey("GenreId");

                    b.HasIndex("Song_GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Description = "J-POP"
                        },
                        new
                        {
                            GenreId = 2,
                            Description = "Rock"
                        },
                        new
                        {
                            GenreId = 3,
                            Description = "Metal"
                        });
                });

            modelBuilder.Entity("TunaPiano.Models.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SongId"));

                    b.Property<string>("AlbumName")
                        .HasColumnType("text");

                    b.Property<int>("ArtistId")
                        .HasColumnType("integer");

                    b.Property<string>("Length")
                        .HasColumnType("text");

                    b.Property<string>("SongName")
                        .HasColumnType("text");

                    b.Property<int?>("Song_GenreId")
                        .HasColumnType("integer");

                    b.HasKey("SongId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("Song_GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            AlbumName = "Jet Set Radio Future O.S.T.",
                            ArtistId = 1,
                            Length = "4:18",
                            SongName = "Humming the Bassline (D.S.Remix)"
                        },
                        new
                        {
                            SongId = 2,
                            AlbumName = "Discovery",
                            ArtistId = 2,
                            Length = "5:20",
                            SongName = "One More Time"
                        },
                        new
                        {
                            SongId = 3,
                            AlbumName = "Project Restoration Vol. 2",
                            ArtistId = 3,
                            Length = "3:55",
                            SongName = "Stay Alive"
                        });
                });

            modelBuilder.Entity("TunaPiano.Models.Song_Genre", b =>
                {
                    b.Property<int>("Song_GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Song_GenreId"));

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.Property<int>("SongId")
                        .HasColumnType("integer");

                    b.HasKey("Song_GenreId");

                    b.ToTable("Song_Genres");

                    b.HasData(
                        new
                        {
                            Song_GenreId = 1,
                            GenreId = 1,
                            SongId = 1
                        },
                        new
                        {
                            Song_GenreId = 2,
                            GenreId = 1,
                            SongId = 2
                        },
                        new
                        {
                            Song_GenreId = 3,
                            GenreId = 2,
                            SongId = 3
                        });
                });

            modelBuilder.Entity("GenreSong", b =>
                {
                    b.HasOne("TunaPiano.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TunaPiano.Models.Song", null)
                        .WithMany()
                        .HasForeignKey("SongsSongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TunaPiano.Models.Genre", b =>
                {
                    b.HasOne("TunaPiano.Models.Song_Genre", null)
                        .WithMany("Genres")
                        .HasForeignKey("Song_GenreId");
                });

            modelBuilder.Entity("TunaPiano.Models.Song", b =>
                {
                    b.HasOne("TunaPiano.Models.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TunaPiano.Models.Song_Genre", null)
                        .WithMany("Songs")
                        .HasForeignKey("Song_GenreId");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("TunaPiano.Models.Artist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("TunaPiano.Models.Song_Genre", b =>
                {
                    b.Navigation("Genres");

                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
